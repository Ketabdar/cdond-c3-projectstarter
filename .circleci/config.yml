version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:13.8.0
  aws:
    docker:
      - image: amazon/aws-cli    
            
jobs:
  build-frontend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: frontend build
          command: |
            cd frontend
            npm i
            npm run build      
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: backend build
          command: |
            cd backend
            npm i
            npm run build 
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-frontend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-test]
      - run:
          name: frontend test
          command: |
            cd frontend
            npm i
            npm run test 
                
  test-backend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: [backend-test]
      - run:
          name: backend test
          command: |
            cd backend
            npm i
            npm run test 
            
  scan-frontend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-scan]
      - run:
          name: frontend scan
          command: |
            cd frontend
            npm audit --audit-level=critical

  scan-backend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: [backend-scan]
      - run:
          name: backend scan
          command: |
            cd backend
            npm audit fix --audit-level=critical  


  deploy-infrastructure:
    executor: aws
    steps:
      - checkout
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --tags project=pr5-frontend \
              --stack-name "backend-deployment" \
              --parameter-overrides ID="fhi745843utfje"  
      - run:
          name: Ensure front-end infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --tags project=pr5-backend \
              --stack-name "frontend-deployment" \
              --parameter-overrides ID="fhi745843utfje"  
      - run:
          name: Add back-end ip to ansible inventory
          command: |
            # Your code here
            exit 1
      - persist_to_workspace:
          root: ~/
          paths:
            - cdond-c3-projectstarter/.circleci/ansible/inventory.txt
      # Here's where you will add some code to rollback on failure            


workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
      - deploy-infrastructure:
          requires: [build-frontend, build-backend]    